##
# (c) 2024 - Cloud Ops Works LLC - https://cloudops.works/
#            On GitHub: https://github.com/cloudopsworks
#            Distributed Under Apache v2.0 License
#
name: Continuous deployment to target environment

on:
  workflow_call:
    inputs:
      release_version:
        required: true
        type: string
      release_name:
        required: false
        type: string
      environment:
        required: true
        type: string
      package_name:
        required: false
        type: string
        default: ''
      package_type:
        required: false
        type: string
        default: ''
      deployment_name:
        required: true
        type: string
      target_cloud:
        required: true
        type: string
      target_cloud_type:
        required: true
        type: string
      apis_enabled:
        required: true
        type: boolean
      runner_set:
        required: true
        type: string
      DOCKER_REGISTRY_ADDRESS:
        required: false
        type: string
      HELM_REGISTRY_ADDRESS:
        required: false
        type: string
      BOT_USER:
        required: true
        type: string
      BOT_EMAIL:
        required: true
        type: string
      AWS_REGION:
        required: false
        type: string
    secrets:
      token:
        required: true
      AWS_ACCESS_KEY_ID:
        required: false
      AWS_SECRET_ACCESS_KEY:
        required: false
      AZURE_SERVICE_ID:
        required: false
      AZURE_SERVICE_SECRET:
        required: false

jobs:
  project_data:
    runs-on: ubuntu-latest
    outputs:
      project_name: ${{ steps.getowner.outputs.repo_name }}
    steps:
      # Get the owner repo
      - name: Get owner
        id: getowner
        run: |
          repo_owner=`echo "$GITHUB_REPOSITORY" | cut -f 1 -d "/"`
          repo_name=`echo "$GITHUB_REPOSITORY" | cut -f 2 -d "/"`
          echo "owner=$repo_owner" >> $GITHUB_OUTPUT
          echo "repo_name=$repo_name" >> $GITHUB_OUTPUT
      - name: outputs
        run: |
          echo "cloud:      ${{ inputs.target_cloud }}"
          echo "cloud_type: ${{ inputs.target_cloud_type }}"

  deploy-aws-eb:
    needs:
      - project_data
    uses: ./.github/workflows/terragrunt-aws.yml
    if: ${{ inputs.target_cloud == 'AWS' && ( inputs.target_cloud_type == 'eb' || inputs.target_cloud_type == 'elasticbeanstalk' ) }}
    with:
      release_version: ${{ inputs.release_version }}
      release_name: ${{ inputs.release_name }}
      environment: ${{ inputs.environment }}
      package_name: ${{ inputs.package_name }}
      package_type: ${{ inputs.package_type }}
      deployment_name: ${{ inputs.deployment_name }}
      target_cloud: 'aws'
      target_cloud_type: 'beanstalk'
      runner_set: ${{ inputs.runner_set }}
      DOCKER_REGISTRY_ADDRESS: ${{ inputs.DOCKER_REGISTRY_ADDRESS }}
      HELM_REGISTRY_ADDRESS: ${{ inputs.HELM_REGISTRY_ADDRESS }}
      BOT_USER: ${{ inputs.BOT_USER }}
      BOT_EMAIL: ${{ inputs.BOT_EMAIL }}
      AWS_REGION: ${{ inputs.AWS_REGION }}
    secrets: inherit

  deploy-aws-eks:
    needs:
      - project_data
    uses: ./.github/workflows/terragrunt-aws.yml
    if: ${{ inputs.target_cloud == 'AWS' && ( inputs.target_cloud_type == 'kubernetes' || inputs.target_cloud_type == 'eks' ) }}
    with:
      release_version: ${{ inputs.release_version }}
      release_name: ${{ inputs.release_name }}
      environment: ${{ inputs.environment }}
      package_name: ${{ inputs.package_name }}
      package_type: ${{ inputs.package_type }}
      deployment_name: ${{ inputs.deployment_name }}
      target_cloud: 'aws'
      target_cloud_type: 'kubernetes'
      runner_set: ${{ inputs.runner_set }}
      DOCKER_REGISTRY_ADDRESS: ${{ inputs.DOCKER_REGISTRY_ADDRESS }}
      HELM_REGISTRY_ADDRESS: ${{ inputs.HELM_REGISTRY_ADDRESS }}
      BOT_USER: ${{ inputs.BOT_USER }}
      BOT_EMAIL: ${{ inputs.BOT_EMAIL }}
      AWS_REGION: ${{ inputs.AWS_REGION }}
    secrets: inherit

  deploy-aws-lambda:
    needs:
      - project_data
    uses: ./.github/workflows/terragrunt-aws.yml
    if: ${{ inputs.target_cloud == 'AWS' && inputs.target_cloud_type == 'lambda' }}
    with:
      release_version: ${{ inputs.release_version }}
      release_name: ${{ inputs.release_name }}
      environment: ${{ inputs.environment }}
      package_name: ${{ inputs.package_name }}
      package_type: ${{ inputs.package_type }}
      deployment_name: ${{ inputs.deployment_name }}
      target_cloud: 'aws'
      target_cloud_type: 'lambda'
      runner_set: ${{ inputs.runner_set }}
      DOCKER_REGISTRY_ADDRESS: ${{ inputs.DOCKER_REGISTRY_ADDRESS }}
      HELM_REGISTRY_ADDRESS: ${{ inputs.HELM_REGISTRY_ADDRESS }}
      BOT_USER: ${{ inputs.BOT_USER }}
      BOT_EMAIL: ${{ inputs.BOT_EMAIL }}
      AWS_REGION: ${{ inputs.AWS_REGION }}
    secrets: inherit
