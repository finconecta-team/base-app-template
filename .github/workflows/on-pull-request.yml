##
# (c) 2024 - Cloud Ops Works LLC - https://cloudops.works/
#            On GitHub: https://github.com/cloudopsworks
#            Distributed Under Apache v2.0 License
#
name: On Pull request action

on:
  workflow_call:
    secrets:
      token:
        required: true

jobs:
  on-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/labeler@v4
        with:
          ref: ${{ github.head_ref }}
          repo-token: ${{ secrets.token }}
      - name: test
        run:
          echo "REF=${{ github.ref }}"
          echo "REF_NAME=${{ github.ref_name }}"
          echo "HEAD_REF=${{ github.head_ref }}"
          echo "BASE_REF=${{ github.base_ref }}"

      # Get the owner repo
      - name: Get owner
        id: getowner
        run: |
          repo_owner=`echo "$GITHUB_REPOSITORY" | cut -f 1 -d "/"`
          repo_name=`echo "$GITHUB_REPOSITORY" | cut -f 2 -d "/"`
          echo "owner=$repo_owner" >> $GITHUB_OUTPUT
          echo "repo_name=$repo_name" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.token }}

      - name: Get Automatic Environment
        id: check_automatic
        uses: mikefarah/yq@master
        with:
          cmd: yq e '.cd.automatic' .github/cloudopsworks-ci.yaml

      - name: Get Reviewers count
        id: reviewers_count
        uses: mikefarah/yq@master
        with:
          cmd: yq e '.config.requiredReviewers' .github/cloudopsworks-ci.yaml

      - name: Get Reviewers list
        id: reviewers
        uses: mikefarah/yq@master
        with:
          cmd: yq e -o=json -I=0 '[.config.reviewers[] | select(. != "${{ github.event.pull_request.user.login }}") ]' .github/cloudopsworks-ci.yaml

      - name: Assign Milestone to the PR
        uses: actions/github-script@v7
        if: ${{ startsWith(github.head_ref,'release/') }}
        with:
          github-token: ${{secrets.token}}
          script: |
            // Retrieve the list of github milestones, add the milestone that matches with rel_name to the PR only
            // if the milestone does exist, if the milestone does not exist, create it and add it to the PR
            const rel_name = '${{ github.head_ref }}';
            const rel_version = rel_name.replace('release/','');
            
            const mil_list = await github.rest.issues.listMilestones({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            var mil_number = 0;
            for ( const mil of mil_list.data ) {
              if ( mil.title == rel_version ) {
                mil_number = mil.number;
              }
            }
            if ( mil_number == 0 ) {
              const mil = await github.rest.issues.createMilestone({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: rel_version
              });
              mil_number = mil.data.number;
            }
            github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              milestone: mil_number
            });

      - uses: actions/github-script@v7
        if: ${{ steps.check_automatic.outputs.result == 'true' || github.ref == 'develop' }}
        with:
          github-token: ${{secrets.token}}
          script: |
            // Set the approved labels and the automatic-environment label
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['approved', 'automatic-environment']
            });

      - uses: actions/github-script@v7
        if: ${{ steps.check_automatic.outputs.result != 'true' && github.ref != 'develop' }}
        with:
          github-token: ${{secrets.token}}
          script: |
            const reviewers_json=JSON.parse('${{ steps.reviewers.outputs.result }}')
            const reviewers_count=${{ steps.reviewers_count.outputs.result }}
            const actor = '${{ github.event.pull_request.user.login }}'
            
            var reviewers = []
            for ( const rev of reviewers_json ) {
              if ( actor != rev ) {
                reviewers.push(rev)
              }
            }

            github.rest.pulls.requestReviewers({
              pull_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              reviewers: reviewers
            })

            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['approval-required','review-required']
            })